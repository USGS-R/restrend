% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/dropAllMissing.R
\name{dropAllMissing}
\alias{dropAllMissing}
\title{Handle Missing Values in Data}
\usage{
dropAllMissing(data, columns = "All", ...)
}
\arguments{
\item{data}{the dataset to subset for all missing values.}

\item{columns}{the columns to check for missing values. See \bold{Details}.}

\item{\dots}{any additional arguments to \code{columns} if it is a funciton.}
}
\value{
The dataset \code{data} having rows with at least one nonmissing value
in the columns specified by \code{columns}.
}
\description{
This function is useful for dealing with \code{NA}s in data frames. Only
rows in the data specified by \code{columns} that have only missing values
are removed.
}
\details{
The value for \code{columns} can be a character vector containing the
name of the columns to check, or "All," which checks all columns. Or it can be
a function that returns a logical value--\code{TRUE} checks the column and
\code{FALSE} does not. Any additonal arguments the the function can be given
by \dots.
}
\examples{
# create a short test dataset
test.df <- data.frame(A=c("a", "b", "c", "d", "e"),
   B=c(1, 2, NA, NA, 5), # numeric values
   C=c(1L, 3L, NA, 4L, NA), # integer values
   D=c(1, 2, NA, NA, 5)) # more numeric values
# The default, no row has all missing values
dropAllMissing(test.df)
# Check 2 columns
dropAllMissing(test.df, columns=c("B", "C"))
# check all numeric, including both integer and numeric types
dropAllMissing(test.df, columns=is.numeric)
# Check only those that are type numeric
dropAllMissing(test.df, columns=inherits, what="numeric")
}

